#########
# STARK #
#########
# Usage: docker-compose up

version: '3'

# SERVICES
##########

services:


    # STARK IMAGES
    ##############


    # STARK SOURCES
    stark-sources:
        image: ${DOCKER_STARK_SOURCES_IMAGE}
        build:
            context: ${DOCKER_STARK_CONTEXT}
            dockerfile: Dockerfile
            args:
                - THREADS=${DOCKER_STARK_BUILD_THREADS}
                - REPO_SOURCES=${DOCKER_STARK_BUILD_SOURCES_URL}
                - REMOVE_SOURCES=0
        container_name: STARK-sources
        command: --help
        env_file:
            - ${DOCKER_COMPOSE_ENV}
        networks:
            - stark


    # STARK IMAGE
    stark:
        image: ${DOCKER_STARK_IMAGE}
        build:
            context: ${DOCKER_STARK_CONTEXT}
            dockerfile: Dockerfile
            args:
                - THREADS=${DOCKER_STARK_BUILD_THREADS}
                - REPO_SOURCES=${DOCKER_STARK_BUILD_SOURCES_URL}
                - REMOVE_SOURCES=1
        container_name: STARK
        command: --help
        env_file:
            - ${DOCKER_COMPOSE_ENV}
        depends_on:
            - stark-sources
        networks:
            - stark


    # STARK CREATE FOLDERS
    stark-folders:
        image: ${DOCKER_STARK_IMAGE}
        container_name: STARK-folders
        entrypoint: /bin/bash
        command: -c "/tool/bin/STARK.setup --docker-env-file=/tool/.env --setup-type=INNER --setup-main-folder-pattern=/STARK_folder_setup --verbose"
        volumes:
            - main:/STARK_folder_setup/STARK:rw
            - ${DOCKER_COMPOSE_ENV}:/tool/.env:ro
        env_file:
            - ${DOCKER_COMPOSE_ENV}
        depends_on:
            - stark
        networks:
            - stark


    # STARK DATABASES POPULATION
    stark-databases:
        image: ${DOCKER_STARK_IMAGE}
        container_name: STARK-databases
        entrypoint: /bin/bash
        command: -c "/tool/bin/get_databases.sh --build --databases=${DOCKER_STARK_INNER_FOLDER_DATABASES} --threads=${DOCKER_STARK_GET_DATABASES_THREADS} --additional_annotations=${DOCKER_STARK_GET_DATABASES_ADDITIONAL_ANNOTATIONS} --verbose 1>>${DOCKER_STARK_INNER_FOLDER_DATABASES}/STARK.databases.build.log 2>>${DOCKER_STARK_INNER_FOLDER_DATABASES}/STARK.databases.build.err"
        volumes:
            # Databases folder
            - databases:${DOCKER_STARK_INNER_FOLDER_DATABASES}:rw
            # HOWARD databases defintions (if already exists, need to define DOCKER_STARK_FOLDER_CONFIG_HOWARD and DOCKER_STARK_INNER_FOLDER_CONFIG_HOWARD)
            #- ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_CONFIG_HOWARD}:${DOCKER_STARK_INNER_FOLDER_CONFIG_HOWARD}:ro
        #env_file:
        #    - ${DOCKER_COMPOSE_ENV}
        depends_on:
            - stark
            - stark-folders
        networks:
            - stark


    # STARK SOURCES
    stark-sources-archive:
        image: ${DOCKER_STARK_SOURCES_IMAGE}
        container_name: STARK-sources-archive
        entrypoint: /bin/bash
        command: -c "rsync -auczAXhiv --no-links --no-perms --no-owner --no-group ${DOCKER_STARK_INNER_FOLDER_SOURCES}/* /sources-archive/ 1>>/sources-archive/archive.log 2>>/sources-archive/archive.err && rsync -auczAXhiv --no-links --no-perms --no-owner --no-group ${DOCKER_STARK_INNER_FOLDER_MAIN}/tools/* /sources-archive/sources/tools/ 1>>/sources-archive/archive.log 2>>/sources-archive/archive.err "
        volumes:
            - sources:/sources-archive:rw
        env_file:
            - ${DOCKER_COMPOSE_ENV}
        depends_on:
            - stark-sources
            - stark-folders
        networks:
            - stark


# VOLUMES
#########

volumes:

    # MAIN STARK FOLDER
    main:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}
            o: bind

    # INPUT
    input:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT}
            o: bind

    # DEMULTIPLEXING
    demultiplexing:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_OUTPUT_DEMULTIPLEXING}
            o: bind

    # RESULTS
    results:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_OUTPUT_RESULTS}
            o: bind

    # REPOSITORY
    repository:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY}
            o: bind

    # ARCHIVE
    archive:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_ARCHIVE}
            o: bind

    # DATA
    data:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATA}
            o: bind

    # CONFIG
    config:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_CONFIG}
            o: bind

    # SOURCES
    sources:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_SOURCES}
            o: bind

    # DATABASES
    databases:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATABASES}
            o: bind


# NETWORK
###########

networks:
    stark:
        driver: "bridge"
        ipam:
            driver: default
            config:
                - subnet: ${DOCKER_STARK_MAIN_SUBNET}
                #  gateway: ${DOCKER_STARK_MAIN_GATEWAY}

