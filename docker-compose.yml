#########
# STARK #
#########
# Usage: docker-compose up

version: '3'

# SERVICES
##########

services:

    # STARK IMAGES
    ##############

    # STARK BASE IMAGE
    stark-base:
        image: ${DOCKER_STARK_IMAGE_BASE}
        build:
            context: ${DOCKER_STARK_CONTEXT}
            #dockerfile: base.Dockerfile
            dockerfile: repo.Dockerfile
            args:
                - REMOVE_SOURCES=1
                - REPO=${DOCKER_STARK_BUILD_REPO_URL}
        container_name: STARK-base
        env_file:
            - .env

    # STARK REPO
    stark-repo:
        image: ${DOCKER_STARK_IMAGE_REPO}
        build:
            context: ${DOCKER_STARK_CONTEXT}
            #dockerfile: base.Dockerfile
            dockerfile: repo.Dockerfile
            args:
                - REMOVE_SOURCES=0
                - REPO=${DOCKER_STARK_BUILD_REPO_URL}
        entrypoint: bash
        command: -c "find /STARK/sources/sources/ -maxdepth 3 -mindepth 1 -type d"
        container_name: STARK-repo
        env_file:
            - .env

    # STARK IMAGE
    stark:
        image: ${DOCKER_STARK_IMAGE}
        build:
            context: ${DOCKER_STARK_CONTEXT}
            dockerfile: Dockerfile
            args:
                - DOCKER_STARK_IMAGE_BASE=${DOCKER_STARK_IMAGE_BASE}
        container_name: STARK
        command: --help
        env_file:
            - .env
        links:
            - stark-base

    # STARK DATABASES POPULATION
    stark-databases:
        image: ${DOCKER_STARK_IMAGE}
        entrypoint: /tool/bin/get_databases.sh
        command: --build --threads=${DOCKER_STARK_GET_DATABASES_THREADS} --additional_annotations=${DOCKER_STARK_GET_DATABASES_ADDITIONAL_ANNOTATIONS}
        container_name: STARK-databases
        volumes:
            - databases:/STARK/databases
        links:
            - stark


    # SERVICES
    ##########

    # STARK SERVICE SERVER
    stark-service-launcher:
        image: ${DOCKER_STARK_SERVICE_LAUNCHER_IMAGE}
        build:
            context: ${DOCKER_STARK_SERVICE_LAUNCHER_CONTEXT}
            dockerfile: Dockerfile
        container_name: STARK-service-launcher
        env_file:
            - .env
        ports:
            - ${DOCKER_STARK_SERVICE_PORT_PATTERN}${DOCKER_STARK_SERVICE_LAUNCHER_PORT_HOST}:${DOCKER_STARK_SERVICE_LAUNCHER_PORT_INNER}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - analyses:${DOCKER_STARK_FOLDER_ANALYSES_INNER}:rw
        links:
            - stark
            - stark-databases
        restart: always


    # STARK SERVICE SERVER
    stark-service-listener:
        image: ${DOCKER_STARK_IMAGE}
        entrypoint: /tool/bin/STARK.listener
        #command: --verbose --command="STARK --docker-env-file=${DOCKER_STARK_SERVICE_LISTENER_ENV}"
        command: --verbose
        container_name: STARK-listener
        env_file:
            - .env
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - databases:${DOCKER_STARK_FOLDER_DATABASES_INNER}:ro
            - input:${DOCKER_STARK_FOLDER_INPUT_INNER}:ro
            - repository:${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY_INNER}:rw
            - archive:${DOCKER_STARK_FOLDER_OUTPUT_ARCHIVE_INNER}:rw
            - analyses:${DOCKER_STARK_FOLDER_OUTPUT_LOG_INNER}:rw
        links:
            - stark
        restart: always


    # STARK SERVICE SERVER CENTOS
    stark-service-launcher-centos:
        image: ${DOCKER_STARK_SERVICE_LAUNCHER_IMAGE}-centos
        build:
            context: ${DOCKER_STARK_SERVICE_LAUNCHER_CONTEXT}
            dockerfile: centos.Dockerfile
        container_name: STARK-service-launcher-centos
        env_file:
            - .env
        ports:
            - ${DOCKER_STARK_SERVICE_PORT_PATTERN}${DOCKER_STARK_SERVICE_LAUNCHER_PORT_HOST}2:${DOCKER_STARK_SERVICE_LAUNCHER_PORT_INNER}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - analyses:/STARK/analyses
        links:
            - stark
            - stark-databases
        restart: always


    # STARK SERVICE REPO
    stark-service-repo:
        image: ${DOCKER_STARK_SERVICE_REPO_IMAGE}
        container_name: STARK-service-repo
        restart: always
        env_file:
            - .env
        ports:
            - ${DOCKER_STARK_SERVICE_PORT_PATTERN}${DOCKER_STARK_SERVICE_REPO_PORT_HOST}:${DOCKER_STARK_SERVICE_REPO_PORT_INNER}
        volumes:
            - ${DOCKER_STARK_SERVICE_REPO_FOLDER}:/usr/local/apache2/htdocs/
        restart: always

    # # STARK SERVICE EXPLORER
    # stark-server-explorer:
    #     image: ${DOCKER_STARK_SERVICE_EXPLORER_IMAGE}
    #     container_name: STARK-service-explorer
    #     restart: always
    #     env_file:
    #         - .env
    #     ports:
    #         - ${DOCKER_STARK_SERVICE_PORT_PATTERN}${DOCKER_STARK_SERVICE_EXPLORER_PORT_HOST}:${DOCKER_STARK_SERVICE_EXPLORER_PORT_INNER}
    #     volumes:
    #         - ${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY}:/usr/local/apache2/htdocs/
    #     restart: always

    # STARK SERVICE BROWSER
    stark-service-browser:
        image: ${DOCKER_STARK_SERVICE_BROWSER_IMAGE}
        container_name: STARK-service-browser
        #command:  -d ${DOCKER_STARK_SERVICE_BROWSER_FOLDER_CONFIG_INNER}/filebrowser.db -c ${DOCKER_STARK_SERVICE_BROWSER_FOLDER_CONFIG_INNER}/.filebrowser.json -r ${DOCKER_STARK_SERVICE_BROWSER_FOLDER_DATA_INNER}
        command: -r ${DOCKER_STARK_SERVICE_BROWSER_FOLDER_DATA_INNER}
        restart: always
        env_file:
            - .env
        ports:
            - ${DOCKER_STARK_SERVICE_PORT_PATTERN}${DOCKER_STARK_SERVICE_BROWSER_PORT_HOST}:${DOCKER_STARK_SERVICE_BROWSER_PORT_INNER}
        volumes:
            - ${DOCKER_STARK_SERVICE_BROWSER_FOLDER_CONFIG_HOST}:${DOCKER_STARK_SERVICE_BROWSER_FOLDER_CONFIG_INNER}:rw
            - ${DOCKER_STARK_SERVICE_BROWSER_FOLDER_DATA_HOST}:${DOCKER_STARK_SERVICE_BROWSER_FOLDER_DATA_INNER}:rw
            - ${DOCKER_STARK_SERVICE_BROWSER_FOLDER_USERS_HOST}:${DOCKER_STARK_SERVICE_BROWSER_FOLDER_USERS_INNER}:rw
            - input:${DOCKER_STARK_SERVICE_BROWSER_FOLDER_DATA_INNER}/raw:ro
            - repository:${DOCKER_STARK_SERVICE_BROWSER_FOLDER_DATA_INNER}/repository:ro
            - archive:${DOCKER_STARK_SERVICE_BROWSER_FOLDER_DATA_INNER}/archives:ro
        restart: always



# VOLUMES
#########

volumes:

    # INPUT
    input:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_INPUT}
            o: bind

    # DEMULTIPLEXING
    # demultiplexing:
    #     driver: local
    #     driver_opts:
    #         type: none
    #         device: ${DOCKER_STARK_FOLDER_OUTPUT_DEMULTIPLEXING}
    #         o: bind

    # REPOSITORY
    repository:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY}
            o: bind

    # ARCHIVE
    archive:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_OUTPUT_ARCHIVE}
            o: bind

    # ANALYSES
    analyses:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_ANALYSES}
            o: bind

    # LOG
    log:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_OUTPUT_LOG}
            o: bind


    # DATABASES
    databases:
        driver: local
        driver_opts:
            type: none
            device: ${DOCKER_STARK_FOLDER_DATABASES}
            o: bind
