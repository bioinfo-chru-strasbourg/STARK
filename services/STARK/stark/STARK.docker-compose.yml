#########
# STARK #
#########
# Usage: docker-compose up

version: '3'

# SERVICES
##########

services:


    # STARK CLI
    stark-module-stark-submodule-stark-service-cli:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_IMAGE}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_NAME}
        entrypoint: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_ENTRYPOINT}
        command: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_COMMAND}
        restart: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_RESTART}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_CONTAINER_ENV_FILE}
        environment:
            # Sleep time
            - SLEEP=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_PARAM_SLEEP}
        volumes:
            # Main configuration
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_HOST_FOLDER_CONFIG}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_INNER_FOLDER_CONFIG}:ro
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_CLI_INNER_FOLDER_SERVICES}:rw
            # Config
            - ${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_HOST_FOLDER_CONFIG_MYAPPS}:${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_INNER_FOLDER_CONFIG_MYAPPS}:ro
            - ${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_HOST_FOLDER_CONFIG_HOWARD}:${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_INNER_FOLDER_CONFIG_HOWARD}:ro
            # Databases
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATABASES}:${DOCKER_STARK_INNER_FOLDER_DATABASES}:ro
            # Input
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATA}:${DOCKER_STARK_INNER_FOLDER_DATA}:rw
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_RUNS}:${DOCKER_STARK_INNER_FOLDER_INPUT_RUNS}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_MANIFESTS}:${DOCKER_STARK_INNER_FOLDER_INPUT_MANIFESTS}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_PEDIGREE}:${DOCKER_STARK_INNER_FOLDER_INPUT_PEDIGREE}:ro
            # Output
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_REPOSITORY}:rw
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_DEPOSITORY}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_ARCHIVES}:rw
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_FAVORITES}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_FAVORITES}:rw
            # Activation of Depository/Archives
            #- ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_DEPOSITORY}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_DEPOSITORY}:rw
            #- ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_ARCHIVES}:${DOCKER_STARK_INNER_FOLDER_OUTPUT_ARCHIVES}:rw
        networks:
            - stark_stark
        healthcheck:
            test: "STARK --help | head -n5 && /tool/bin/STARK.setup --setup-type=INNER && /tool/bin/get_databases.sh"
            interval: 10s
            timeout: 10s
            retries: 3


    # STARK DAS
    stark-module-stark-submodule-stark-service-das:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_IMAGE}
        build:
            context: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_IMAGE_CONTEXT}
            dockerfile: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_IMAGE_CONTEXT_DOCKERFILE}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_CONTAINER_NAME}
        restart: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_CONTAINER_RESTART}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_CONTAINER_ENV_FILE}
        volumes:
            # Main configuration
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_HOST_FOLDER_CONFIG}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_INNER_FOLDER_CONFIG}:ro
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_INNER_FOLDER_SERVICES}:rw
            # Data folders available (need to be coherent with other services)
            # Services
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_SERVICES}:ro
            # Databases
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATABASES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_DATABASES}:ro
            # Inputs
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATA}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_DATA}/Data:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_RUNS}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_INPUTS}/Input/runs:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_MANIFESTS}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_INPUTS}/Input/manifests:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_PEDIGREE}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_INPUTS}/Input/pedigree:ro
            # Repositories
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_REPOSITORY}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_REPOSITORIES}/Repository:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_DEPOSITORY}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_REPOSITORIES}/Depository:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_ARCHIVES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_REPOSITORIES}/Archives:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_OUTPUT_FAVORITES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC}/${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_INNER_FOLDER_PUBLIC_SUBFOLDER_REPOSITORIES}/Favorites:ro
        networks:
            - ${DOCKER_STARK_MAIN_NETWORK}
        ports:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_PORT_PUBLISHED}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_DAS_PARAM_PORT_TARGET}
        healthcheck:
            test: "curl -f http://0.0.0.0:5000 || exit 1"
            interval: 10s
            timeout: 10s
            retries: 3

        
    # STARK API
    stark-module-stark-submodule-stark-service-api:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_IMAGE}
        build:
            context: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_IMAGE_CONTEXT}
            dockerfile: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_IMAGE_CONTEXT_DOCKERFILE}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_CONTAINER_NAME}
        restart: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_CONTAINER_RESTART}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_CONTAINER_ENV_FILE}
        environment:
            # Task Spooler parameters
            - TS=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_TASK_SPOOLER_BIN}
            - TS_SAVELIST=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_TASK_SPOOLER_TS_SAVELIST}
            # Shell
            - SHELL=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_SHELL}
            # Docker STARK image
            - DOCKER_STARK_IMAGE=${DOCKER_STARK_IMAGE}
            # Docker STARK container mount parameters - databases config data input repository archives services
            - DOCKER_STARK_SERVICE_STARK_API_CONTAINER_MOUNT=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_CONTAINER_MOUNT}
            # Docker STARK container mount parameters - databases config data input repository archives services AND results demultiplexing
            #- DOCKER_STARK_SERVICE_STARK_API_CONTAINER_MOUNT=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_CONTAINER_MOUNT_FULL}
            # Inner log folder (default "/STARK/services/STARK/API")
            - DOCKER_STARK_SERVICE_STARK_API_LOG_FOLDER=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_LOG_FOLDER}
            # Inner runs folder (default "/STARK/input/runs")
            - DOCKER_STARK_SERVICE_STARK_API_RUNS_FOLDER=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_RUNS_FOLDER} 
        ports:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_PORT_PUBLISHED}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_PORT_TARGET}
        volumes:
            # Docker sock
            - ${DOCKER_STARK_SOCK_MOUNT}
            # Main configuration
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_HOST_FOLDER_CONFIG}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_INNER_FOLDER_CONFIG}:ro
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_INNER_FOLDER_SERVICES}:rw
            # Task spooler
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_TASK_SPOOLER_TS_SAVELIST}:rw
            # Inner runs folder
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_RUNS}:${DOCKER_STARK_INNER_FOLDER_INPUT_RUNS}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_MANIFESTS}:${DOCKER_STARK_INNER_FOLDER_INPUT_MANIFESTS}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_PEDIGREE}:${DOCKER_STARK_INNER_FOLDER_INPUT_PEDIGREE}:ro
        depends_on:
            stark-module-stark-submodule-stark-service-cli:
                condition: service_healthy
        networks:
            - ${DOCKER_STARK_MAIN_NETWORK}
        healthcheck:
            test: "curl -f http://0.0.0.0:8000 || exit 1"
            interval: 10s
            timeout: 10s
            retries: 3


    # STARK SERVICE LISTENER
    stark-module-stark-submodule-stark-service-listener:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_IMAGE}
        entrypoint: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_ENTRYPOINT}
        command: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_COMMAND}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_NAME}
        restart: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_RESTART}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_CONTAINER_ENV_FILE}
        environment: 
            # API Service Container
            - API_CONTAINER_NAME=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_CONTAINER_NAME}
            - API_PORT_TARGET=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_PARAM_PORT_TARGET}
            # Run Days old 
            - DAYS=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_DAYS}
            # Run Conditions
            - CONDITIONS=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_CONDITIONS}
            # Daemon periodicity
            - DAEMON_PERIODICITY=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_DAEMON_PERIODICITY}
            # Input Run
            - INPUT=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_INPUT}
            # Docker STARK Image
            - DOCKER_STARK_IMAGE=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_DOCKER_STARK_IMAGE}
            # Log folder
            - LOG_FOLDER=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_PARAM_LOG_FOLDER}
        volumes:
            # Main configuration
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_HOST_FOLDER_CONFIG}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_INNER_FOLDER_CONFIG}:ro
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_INNER_FOLDER_SERVICES}:rw
            # Config
            - ${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_HOST_FOLDER_CONFIG_MYAPPS}:${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_INNER_FOLDER_CONFIG_MYAPPS}:ro
            - ${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_HOST_FOLDER_CONFIG_HOWARD}:${DOCKER_STARK_MODULE_SUBMODULE_MAIN_CONFIG_INNER_FOLDER_CONFIG_HOWARD}:ro
            # Databases
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATABASES}:${DOCKER_STARK_INNER_FOLDER_DATABASES}:ro
            # Input
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_DATA}:${DOCKER_STARK_INNER_FOLDER_DATA}:rw
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_RUNS}:${DOCKER_STARK_INNER_FOLDER_INPUT_RUNS}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_MANIFESTS}:${DOCKER_STARK_INNER_FOLDER_INPUT_MANIFESTS}:ro
            - ${DOCKER_STARK_MAIN_FOLDER}/${DOCKER_STARK_FOLDER_INPUT_PEDIGREE}:${DOCKER_STARK_INNER_FOLDER_INPUT_PEDIGREE}:ro
        depends_on:
            stark-module-stark-submodule-stark-service-listenerclear:
                condition: service_started
            stark-module-stark-submodule-stark-service-api:
                condition: service_healthy
            stark-module-stark-submodule-stark-service-cli:
                condition: service_healthy
            
        networks:
            - ${DOCKER_STARK_MAIN_NETWORK}
        healthcheck:
            test: "STARK --help | head -n5 && /tool/bin/STARK.setup --setup-type=INNER && /tool/bin/get_databases.sh"
            interval: 10s
            timeout: 10s
            retries: 3

        
    # STARK SERVICE LISTENER CLEAR
    stark-module-stark-submodule-stark-service-listenerclear:
        image: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENERCLEAR_IMAGE}
        entrypoint: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENERCLEAR_CONTAINER_ENTRYPOINT}
        command: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENERCLEAR_CONTAINER_COMMAND}
        container_name: ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENERCLEAR_CONTAINER_NAME}
        env_file:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENERCLEAR_CONTAINER_ENV_FILE}
        environment:
            - LISTENER_FOLDER=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENERCLEAR_PARAM_LISTENER_FOLDER}
            - API_FOLDER=${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENERCLEAR_PARAM_API_FOLDER}
        volumes:
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_LISTENER_INNER_FOLDER_SERVICES}:rw
            - ${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_HOST_FOLDER_SERVICES}:${DOCKER_STARK_MODULE_SUBMODULE_SERVICE_API_INNER_FOLDER_SERVICES}:ro
        depends_on:
            stark-module-stark-submodule-stark-service-cli:
                condition: service_healthy
        networks:
            - ${DOCKER_STARK_MAIN_NETWORK}
        healthcheck:
            disable: true
        


# NETWORK
###########

networks:
    stark_stark:
        external: true
