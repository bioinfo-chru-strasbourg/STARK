#################################
## STARK environment
#################################
export ENV_NAME="STARK"
#export ENV_DESCRIPTION="STrong Analyser on a Robust Kernel"
export ENV_DESCRIPTION="Stellar Tools for variants Analysis and RanKing"
export ENV_RELEASE="0.9b"
export ENV_DATE="15/07/2015"
export ENV_AUTHOR="Antony Le Bechec"
export ENV_COPYRIGHT="IRC"
export ENV_LICENCE="GNU-GPL"

# Usage source env.sh

# FOLDERS
###########

# NGS FOLDER
#if [ -z $NGS_FOLDER ]; then
#	NGS_FOLDER=/media/IRCV2/NGSEnv;
#fi;

export NGS_FOLDER=/home1/IRC/TOOLS
export MAIN_FOLDER=/home1/IRC/DATA/HALOPLEX	# MAIN HALOPLEX Folder (RES, DEM...)
export RAW_FOLDER=/home1/IRC/DATA/HALOPLEX/RAW	# RAW folder
export TMP_FOLDER=$MAIN_FOLDER			# TEMPORARY folder = MAIN V2 folder


#MAIN_FOLDER=/media/miseq
#MAIN_FOLDER=/media/data/miseq/
#export MAIN_FOLDER=/media/IRCV2/V2.2		# MAIN V2 Folder (RES, DEM...)
#export TMP_FOLDER=/media/IRCV2/TMP		# TEMPORARY folder (tmpfs)
#export TMP_FOLDER=/media/TMPV2			# TEMPORARY folder (tmpfs)
#export TMP_FOLDER=/media/IRCV2/TMPNAS		# TEMPORARY folder (NAS)
#export TMP_FOLDER=/media/IRCV2/V2.2		# TEMPORARY folder (NAS)
#export TMP_FOLDER=/media/data2			# TEMPORARY folder (SpeedDisk)
#export TMP_FOLDER=/media/data2/V2		# TEMPORARY folder (tmpfs)
#export TMP_FOLDER=/media/data2			# TEMPORARY folder
export TMP_SYS_FOLDER=/tmp			# TEMPORARY SYSTEM folder (tmpfs)

# SUB-FOLDERS
###############

export GENOMES=genomes
BIN=bin
TOOLS=tools
RAW=MSR
MANIFESTS=Manifests
DEM=DEM
RESULTS_SUBFOLDER=/RES/ALL
RES=RES
VAL=VAL
ANA=ANA
TMP=TMP
MSR_SUBFOLDER=Data/Intensities/BaseCalls
DB=annovar_sources
RULES_FOLDER=haloplex.rules.mk
RULES_PATTERN=*.rules.mk



# FOLDER STRUCTURE
#####################

# SCRIPTS
export NGS_SCRIPTS="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P )"

# ENV With folder Tools, Genomes...
#export NGS_FOLDER="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../.." && pwd -P )"
#export NGS_FOLDER="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../.." && pwd -P )"

# Other folders
export NGS_BIN=$NGS_FOLDER/$BIN					# BINARY folder
export NGS_GENOMES=$NGS_FOLDER/$GENOMES				# GENOMES folder
export MISEQ_FOLDER=$RAW_FOLDER/$RAW				# MISEQ RAW folder
export MANIFEST_FOLDER=$RAW_FOLDER/$MANIFESTS			# MISEQ RAW folder
export DEMULTIPLEXING_FOLDER=$MAIN_FOLDER/$DEM			# DEMULTIPLEXING folder
export RESULTS_FOLDER=$MAIN_FOLDER$RESULTS_SUBFOLDER		# RESULTS folder ALL
export RESULTS_BYGROUP_FOLDER=$MAIN_FOLDER/$RES			# RESULTS folder by group
export RESULTS_FOLDER_BY_GROUP_PROJECT_COPY=$MAIN_FOLDER/$RES	# Copy data into group and project (if defined)
export ANALYSIS_FOLDER=$MAIN_FOLDER/$ANA			# ANALYSIS folder
export VALIDATION_FOLDER=$MAIN_FOLDER/$VAL			# VALIDATION folder
export TMP_FOLDER_TMP=$TMP_FOLDER/$TMP				# TEMPORARY folder tmp
export NGS_TOOLS=$NGS_FOLDER/$TOOLS				# TOOLS	
export BDFOLDER=$NGS_FOLDER/$DB					# DB
export RULES=$NGS_SCRIPTS/$RULES_FOLDER/$RULES_PATTERN		# RULES

# Genomes
##########

# TODO or not
if [ 1 == 0 ]; then
	if [ $TMP_FOLDER != $MAIN_FOLDER ] && [ $TMP_FOLDER != $RAW_FOLDER ]; then	# TMP folder not other folder
		GENOMES=$TMP_FOLDER/NGS;						# Genomes folder in TMP (usually speed disk)
		if [ ! -d $GENOMES ]; then						# If genome folder doesn't exists
			mkdir -p $GENOMES
			rsync -aruv $NGS_GENOMES $GENOMES				# Copy Genome if not exists
		fi;
	fi;
else
	GENOMES=$NGS_GENOMES								# Genomes folder in NGS folder
fi;
#export GENOMES
export ASSEMBLY=hg19				# default Assembly

# DATABASES
#############

export VCFDBSNP=$BDFOLDER/snp138.vcf.gz
export VCFDBSNP137VCF=$BDFOLDER/dbsnp_137.hg19.vcf
#export VCF1000G=$BDFOLDER/1000G_phase1.indels.hg19.vcf
#export VCF1000G=$BDFOLDER/1000G_phase1.indels.b37.vcf
export VCFMILLS1000G=$BDFOLDER/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf
#export COSMIC=$DBFOLDER/cosmic.v54.hg19.vcf
export KNOWN_ALLELES=$VCFMILLS1000G

# CONFIG
##########

# Config
export TMP_REMOVE_TIME=10
export LOG_FILE=analysis.log

# TOOLS
########

# GZIP
export GZIP=gzip						# BIN

# JAVA
export JAVA=java						# BIN
export JAVA_VERSION=1.7.0_75					# VER
export JAVA6=$NGS_TOOLS/java/1.6.0_45/bin/java			# BIN
export JAVA6_VERSION=1.6.0_45					# VER
export JAVA_DESCRIPTION="A high-level programming language developed by Sun Microsystems" 
export JAVA_REF="http://java.com"

# CASAVA
export CASAVA=$NGS_TOOLS/casava/1.8.2/bin			# DIR
export CASAVA_BCLTOFASTQ=$CASAVA/configureBclToFastq.pl		# BIN
export CASAVA_VERSION=1.8.2					# VER
export CASAVA_DESCRIPTION="Processes sequencing reads provided by RTA or OLB, especially demultiplexing"
export BCL2FASTQ=$CASAVA_BCLTOFASTQ			# DIR

# BCL2FASTQ
export BCL2FASTQ=$NGS_TOOLS/bcl2fastq/1.8.4/bin			# DIR
export BCL2FASTQ_VERSION=1.8.4
export BCL2FASTQ_CONFIGURE=$BCL2FASTQ/configureBclToFastq.pl	# BIN
export BCL2FASTQ_DESCRIPTION="BCL to FASTQ conversion"
export CASAVA_REF="http://support.illumina.com/sequencing/sequencing_software/casava.html"

# SAMTOOLS
export SAMTOOLS=$NGS_TOOLS/samtools/1.2/bin/samtools		# BIN
export SAMTOOLS_VERSION=1.2					# VER
export SAMTOOLS_DESCRIPTION="Reading/writing/editing/indexing/viewing SAM/BAM/CRAM format"
export SAMTOOLS_REF="Li H.*, Handsaker B.*, Wysoker A., Fennell T., Ruan J., Homer N., Marth G., Abecasis G., Durbin R. and 1000 Genome Project Data Processing Subgroup (2009) The Sequence alignment/map (SAM) format and SAMtools. Bioinformatics, 25, 2078-9. [PMID: 19505943]. Li H A statistical framework for SNP calling, mutation discovery, association mapping and population genetical parameter estimation from sequencing data. Bioinformatics. 2011 Nov 1;27(21):2987-93. Epub 2011 Sep 8. [PMID: 21903627]"
# VCFUTILS
export VCFUTILS=$NGS_TOOLS/vcfutils/1.2/bin/vcfutils.pl		# BIN-SCRIPT
export VCFUTILS_VERSION=1.2					# VER
export VCFUTILS_DESCRIPTION="fix a compatibility issue with the new bcftools"
# HTSlib - A C library for reading/writing high-throughput sequencing data
export HTSLIB_DESCRIPTION="A C library for reading/writing high-throughput sequencing data"
export HTSLIB_REF="http://www.htslib.org/"
# TABIX
export TABIX=$NGS_TOOLS/tabix/1.2.1/bin/tabix			# BIN
export TABIX_PATH=`dirname $TABIX`					# BIN
export TABIX_VERSION=1.2.1					# VER
export TABIX_DESCRIPTION="Indexing VCF files"
# BGZIP
export BGZIP=$NGS_TOOLS/bgzip/1.2.1/bin/bgzip			# BIN
export BGZIP_VERSION=1.2.1					# VER
export BGZIP_DESCRIPTION="Compressing VCF files"
# BCFTOOLS
export BCFTOOLS=$NGS_TOOLS/bcftools/1.2/bin/bcftools		# BIN
export BCFTOOLS_VERSION=1.2					# VER
export BCFTOOLS_DESCRIPTION="Reading/writing BCF2/VCF/gVCF files and calling/filtering/summarising SNP and short indel sequence variants"
export BCFTOOLS_REF="http://www.htslib.org/"
# VCFTOOLS
export VCFTOOLS=$NGS_TOOLS/vcftools/0.1.12b/bin/		# DIR
export VCFTOOLSLIB=$NGS_TOOLS/vcftools/0.1.12b/perl/		# DIR
export VCFTOOLS_VERSION=0.1.12b
export VCFTOOLS_DESCRIPTION="provide easily accessible methods for working with complex genetic variation data in the form of VCF files"
export VCFTOOLS_REF="http://vcftools.sourceforge.net/"

# PICARD
export PICARDLIB=$NGS_TOOLS/picard/1.95/bin			# DIR
export PICARDLIB_VERSION=1.95					# VER
export PICARDLIB_DESCRIPTION="Java command line tools for manipulating high-throughput sequencing data (HTS) data and formats"
export PICARD_REF="http://broadinstitute.github.io/picard/"

# IGV
export IGV=$NGS_TOOLS/igv/2.3.52				# BIN-JAR
export IGV_VERSION=2.3.52					# VER
export IGV_DESCRIPTION="high-performance visualization tool for interactive exploration of large, integrated genomic datasets"
export IGV_REF="James T. Robinson, Helga Thorvaldsdóttir, Wendy Winckler, Mitchell Guttman, Eric S. Lander, Gad Getz, Jill P. Mesirov. Integrative Genomics Viewer. Nature Biotechnology 29, 2426 (2011). Helga Thorvaldsdóttir, James T. Robinson, Jill P. Mesirov. Integrative Genomics Viewer (IGV): high-performance genomics data visualization and exploration.  Briefings in Bioinformatics 14, 178-192 (2013)."
export IGVTOOLS=$NGS_TOOLS/igvtools/2.3.52/bin/igvtools.jar	# BIN-JAR
export IGVTOOLS_VERSION=2.3.52					# VER
export IGVTOOLS_DESCRIPTION="provides a set of tools for pre-processing data files"
export IGVTOOLS_REF="https://www.broadinstitute.org/igv/igvtools"

# GATK
export GATK=$NGS_TOOLS/gatk/3.4-0/bin/GenomeAnalysisTK.jar	# BIN-JAR
export GATK_VERSION=3.4-0					# VER
export GATK_DESCRIPTION="The toolkit offers a wide variety of tools, with a primary focus on variant discovery and genotyping as well as strong emphasis on data quality assurance."
export GATK_REF="The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data. McKenna A, Hanna M, Banks E, Sivachenko A, Cibulskis K, Kernytsky A, Garimella K, Altshuler D, Gabriel S, Daly M, DePristo MA, 2010 GENOME RESEARCH 20:1297-303 [Article] [Pubmed]"

# MUTECT
export MUTECT=$NGS_TOOLS/mutect/1.1.4/bin/muTect-1.1.4.jar	# BIN-JAR
export MUTECT_VERSION=1.1.4					# VER
export MUTECT_DESCRIPTION="MuTect is a method developed at the Broad Institute for the reliable and accurate identification of somatic point mutations in next generation sequencing data of cancer genomes."
export MUTECT_REF="Cibulskis, K. et al. Sensitive detection of somatic point mutations in impure and heterogeneous cancer samples. Nat Biotechnology (2013).doi:10.1038/nbt.2514"

# FASTQC
export FASTQC=$NGS_TOOLS/fastqc/0.11.3/bin/fastqc		# BIN
export FASTQC_VERSION=0.11.3					# VER
export FASTQC_DESCRIPTION="A quality control tool for high throughput sequence data."
export FASTQC_REF="http://www.bioinformatics.bbsrc.ac.uk/projects/fastqc"

# BWA
export BWA=$NGS_TOOLS/bwa/0.7.12/bin/bwa			# BIN
export BWA_VERSION=0.7.12					# VER
export BWA_DESCRIPTION="package for mapping low-divergent sequences against a large reference genome"
export BWA_REF="Li H. and Durbin R. (2009) Fast and accurate short read alignment with Burrows-Wheeler Transform. Bioinformatics, 25:1754-60. [PMID: 19451168]"

# BEDTOOLS
export BEDTOOLS=$NGS_TOOLS/bedtools/2.17.0/bin/			# DIR
export BEDTOOLS_VERSION=2.17.0					# VER
export BEDTOOLS_DESCRIPTION="a powerful toolset for genome arithmetic"
export BEDTOOLS_REF="http://bedtools.readthedocs.org/"

# ANNOVAR
export ANNOVAR=$NGS_TOOLS/annovar/2015Mar22/bin/		# DIR
export ANNOVAR_VERSION=2015Mar22				# VER
export ANNOVAR_DESCRIPTION="an efficient software tool to utilize update-to-date information to functionally annotate genetic variants detected from diverse genomes"
export ANNOVAR_REF="Wang K, Li M, Hakonarson H. ANNOVAR: Functional annotation of genetic variants from next-generation sequencing data Nucleic Acids Research, 38:e164, 2010"

# VARSCAN
export VARSCAN=$NGS_TOOLS/varscan/v2.3.7/bin/VarScan.jar	# BIN-JAR
export VARSCAN_VERSION=v2.3.7					# VER
export VARSCAN_DESCRIPTION="variant detection in massively parallel sequencing data"
export VARSCAN_REF="VarScan 2: Koboldt, D., Zhang, Q., Larson, D., Shen, D., McLellan, M., Lin, L., Miller, C., Mardis, E., Ding, L., & Wilson, R. (2012). VarScan 2: Somatic mutation and copy number alteration discovery in cancer by exome sequencing Genome Research DOI: 10.1101/gr.129684.111 "

# STARK
export STARK=$NGS_TOOLS/stark/0.9.5d/bin			# DIR
export STARK_VERSION=0.9.5d					# VER
export STARK_DESCRIPTION="Stellar Tools for varaints Analysis and RanKing"
export STARK_REF="inhouse"
export STARK_QUEUED=STARKQueued.txt
export STARK_RUNNING=STARKRunning.txt
export STARK_COMPLETE=STARKComplete.txt


# FATBAM
export FATBAM=$NGS_TOOLS/fatbam/current/bin			# DIR
export FATBAM_VERSION=0.9.4b					# VER
export FATBAM_Clipping=$FATBAM/FATBAM.pl			# BIN-SCRIPT
export FATBAM_ManifestToBED=$FATBAM/FATBAM.ManifestToBED.pl	# BIN-SCRIPT
export FATBAM_BEDToOPTION=$FATBAM/FATBAM.BEDToOption.pl		# BIN-SCRIPT
export FATBAM_ManifestToBED_VERSION=$FATBAM_VERSION
export FATBAM_BEDToOPTION_VERSION=$FATBAM_VERSION
export FATBAM_DESCRIPTION="Clipping Amplicons' Primers"
export FATBAM_REF="inhouse"

# VAP
export VAP=$NGS_TOOLS/vap/0.9beta/bin				# DIR
export VAP_VERSION=0.9beta					# VER
export VAP_ANNOTATION=$VAP/VCFannotation.pl			# BIN-SCRIPT
export VAP_PRIORITIZATION=$VAP/VCFprioritization.pl		# BIN-SCRIPT
export VAP_TRANSLATION=$VAP/VCFtranslation.pl			# BIN-SCRIPT
export VAP_CONFIG=$VAP/config.ini				# INI
export VAP_ANNOTATION_RELEASE=$VAP_VERSION
export VAP_PRIORITIZATION_RELEASE=$VAP_VERSION
export VAP_TRANSLATION_RELEASE=$VAP_VERSION
export VAP_DESCRIPTION="Variant Annotation and Prioritization"
export VAP_REF="inhouse"

# HOWARD
export HOWARD=$NGS_TOOLS/howard/0.9d/bin			# DIR
export HOWARD_VERSION=0.9d					# VER
export HOWARD_ANNOTATION=$HOWARD/VCFannotation.pl		# BIN-SCRIPT
export HOWARD_PRIORITIZATION=$HOWARD/VCFprioritization.pl	# BIN-SCRIPT
export HOWARD_TRANSLATION=$HOWARD/VCFtranslation.pl		# BIN-SCRIPT
export HOWARD_CONFIG=$HOWARD/config.ini				# INI
export HOWARD_ANNOTATION_RELEASE=$HOWARD_VERSION
export HOWARD_PRIORITIZATION_RELEASE=$HOWARD_VERSION
export HOWARD_TRANSLATION_RELEASE=$HOWARD_VERSION
export HOWARD_DESCRIPTION="Highly Open and Valuable tool for Variant Annotation & Ranking"
export HOWARD_REF="inhouse"

# PEPPER # PrEtty PiPEline Repository
export PEPPER=$NGS_TOOLS/pepper/0.9d/bin			# DIR
export PEPPER_VERSION=0.9d					# VER
export PEPPER_INTEGRATION=$PEPPER/DBintegration.sh		# BIN-SCRIPT
export PEPPER_EXPORT=$PEPPER/DBexport.pl			# BIN-SCRIPT
export PEPPER_CONFIG=$PEPPER/config.ini				# INI
export PEPPER_INTEGRATION_RELEASE=$PEPPER_VERSION
export PEPPER_EXPORT_RELEASE=$PEPPER_VERSION
export PEPPER_DESCRIPTION="PrEtty PiPEline Repository - dedicated to store VCF/Variants and metadata in a database"
export PEPPER_REF="inhouse"

# COULSON
export COULSON=$NGS_TOOLS/coulson/current/bin			# DIR
export COULSON_VERSION=0.9



# DATABASE CONFIG
###################

CONFIG=$PEPPER_CONFIG

# DEFAULT PARAMETERS
######################

# ALIGNERS
#ALIGNERS="bwamem bwamemUnclipped" # bwamem bwamemUnclipped bwasw bwaaln
ALIGNERS="bwamem" # bwamem bwamemUnclipped bwasw bwaaln

# CALLERS
CALLERS="gatkUG" # gatkHC gatkUG varscanlowfreq MutaCaller

# ANNOTATORS
ANNOTATORS="howard"

# PIPELINES
PIPELINES="bwamem.gatkUG.howard"


# RELEASE
###########

#RELEASE_FILE=$NGS_FOLDER/RELEASE.txt
README_FILE=$NGS_SCRIPTS/README
RELEASE_FILE=$NGS_SCRIPTS/RELEASE

# CORES
#########

CORES=$(echo `ls -d /sys/devices/system/cpu/cpu[[:digit:]]* | wc -w`" - 1 " | bc)

# Daemon TODO
##########

NOMSERVICE=stark
FOLDERSERVICE=$NGS_FOLDER/
DAEMON_FILE=$NOMSERVICE-daemon
SCRIPTSERVICE=$NOMSERVICE.sh
DELAI=10 #delai d'activation
PID=$$
PIDFILE=$FOLDERSERVICE$NOMSERVICE.pid
#PIDFILE=/var/run/$NOMSERVICE.pid

# PATH
#########

# PATH
export PATH=$PATH:$TABIX_PATH

# PERL5LIB 
export PERL5LIB=$VCFTOOLSLIB





